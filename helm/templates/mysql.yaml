# PersistentVolume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv
spec:
  capacity:
    storage: {{ .Values.mysql.size }}
  accessModes:
    - {{ .Values.mysql.accessMode }}
  hostPath:
    path: "{{ .Values.mysql.hostPath }}"
---
# PersistentVolumeClaim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  labels:
    app: mysql
spec:
  accessModes:
    - {{ .Values.mysql.accessMode }}
  resources:
    requests:
      storage: {{ .Values.mysql.size }}

---
# Deployment
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade  # Ensures this deploys first
    "helm.sh/hook-weight": "-5"  # Lower weights run earlier
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: {{ .Values.mysql.image }}
          ports:
            - containerPort: {{ .Values.mysql.port }}
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: {{ .Values.mysql.rootPassword }}
            - name: MYSQL_DATABASE
              value: {{ .Values.mysql.database }}
            - name: MYSQL_USER
              value: {{ .Values.mysql.user }}
            - name: MYSQL_PASSWORD
              value: {{ .Values.mysql.userPassword }}
          volumeMounts:
            - name: mysql-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-storage
          persistentVolumeClaim:
            claimName: mysql-pvc
---
# Service
apiVersion: v1
kind: Service
metadata:
  name: mysql
  labels:
    app: mysql
spec:
  type: {{ .Values.mysql.type }}
  selector:
    app: mysql
  ports:
    - port: {{ .Values.mysql.port }}
      targetPort: {{ .Values.mysql.port }}
